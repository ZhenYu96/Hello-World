package ${package}.api.controller.v1;

import org.hzero.boot.supporter.utils.Results;
import org.hzero.boot.supporter.base.BaseController;
import ${package}.domain.entity.${className};
import ${package}.domain.repository.${className}Repository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import io.choerodon.core.domain.Page;
import io.choerodon.core.iam.ResourceLevel;
import io.choerodon.mybatis.pagehelper.annotation.SortDefault;
import io.choerodon.mybatis.pagehelper.domain.PageRequest;
import io.choerodon.mybatis.pagehelper.domain.Sort;
import io.choerodon.swagger.annotation.Permission;
import io.swagger.annotations.ApiOperation;
import springfox.documentation.annotations.ApiIgnore;

/**
 * ${comments} 管理 API
 *
 * @author ${author} ${datetime}
 */
@RestController("${classname}Controller.v1")
@RequestMapping("/v1/${lineClassName}s")
public class ${className}Controller extends BaseController {

    @Autowired
    private ${className}Repository ${classname}Repository;

    @ApiOperation(value = "${comments}列表")
    @Permission(level = ResourceLevel.SITE)
    @GetMapping
    public ResponseEntity<?> list(${className} ${classname}, @ApiIgnore @SortDefault(value = ${className}.FIELD_${pkUpperFileName},
            direction = Sort.Direction.DESC) PageRequest pageRequest) {
        Page<${className}> list = ${classname}Repository.pageAndSort(pageRequest, ${classname});
        return Results.success(list);
    }

    @ApiOperation(value = "${comments}明细")
    @Permission(level = ResourceLevel.SITE)
    @GetMapping("/{${pk.attrname}}")
    public ResponseEntity<?> detail(@PathVariable Long ${pk.attrname}) {
        ${className} ${classname} = ${classname}Repository.selectByPrimaryKey(${pk.attrname});
        return Results.success(${classname});
    }

    @ApiOperation(value = "创建${comments}")
    @Permission(level = ResourceLevel.SITE)
    @PostMapping
    public ResponseEntity<?> create(@RequestBody ${className} ${classname}) {
        ${classname}Repository.insertSelective(${classname});
        return Results.success();
    }

    @ApiOperation(value = "修改${comments}")
    @Permission(level = ResourceLevel.SITE)
    @PutMapping
    public ResponseEntity<?> update(@RequestBody ${className} ${classname}) {
        ${classname}Repository.updateByPrimaryKey(${classname});
        return Results.success();
    }

    @ApiOperation(value = "删除${comments}")
    @Permission(level = ResourceLevel.SITE)
    @DeleteMapping("/{${pk.attrname}}")
    public ResponseEntity<?> remove(@PathVariable Long ${pk.attrname}) {
        ${classname}Repository.deleteByPrimaryKey(${pk.attrname});
        return Results.success();
    }

}
