package ${package}.${moduleName}.controller;

import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import ${package}.${moduleName}.controller.Result;
import ${package}.${moduleName}.core.util.ValidatorUtils;
import ${package}.${moduleName}.dto.${className};
import ${package}.${moduleName}.service.I${className}Service;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;

/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("api/${moduleName}/${pathName}")
public class ${className}Controller extends AbstractController {

    @Autowired
    private I${className}Service ${classname}Service;
    
    private static final String ${upperClassName} = "${classname}";

    /**
     * 列表信息
     */
    @RequestMapping("/list")
    public Result list(${className} ${classname},@RequestParam(defaultValue = "0") Integer page, @RequestParam(defaultValue = "10") Integer pageSize){
        PageHelper.startPage(page, pageSize);
        List<${className}> list = ${classname}Service.select(${classname});
        PageInfo<${className}> pageInfo = new PageInfo<${className}>(list);
        return Result.ok().put(Result.PAGE,pageInfo);
    }


    /**
     * 详细信息
     */
    @RequestMapping("/info/{${pk.attrname}}")
    public Result info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
			${className} ${classname} = ${classname}Service.selectById(${pk.attrname});
        return Result.ok().put(${upperClassName}, ${classname});
    }

    /**
     * 提交信息（新增或更新）
     */
    @RequestMapping("/submit")
    public Result submit(@RequestBody ${className} ${classname}){
        ValidatorUtils.validateEntity(${classname});
        if(${classname}.get${pk.attrName}() == null) {
			${classname}Service.insertSelective(${classname});
		}else {
			${classname}Service.updateSelective(${classname});
		}
        return Result.ok();
    }

    /**
     * 删除
     */
    @RequestMapping("/delete")
    public Result delete(@RequestBody String[] ${pk.attrname}s){
        String ${pk.attrname} = StringUtils.join(${pk.attrname}s,",");
        if(StringUtils.isNotBlank(${pk.attrname})) {
		    ${classname}Service.deleteByIds(${pk.attrname});
		}
        return Result.ok();
    }

}
